# -*- coding: utf-8 -*-
"""
Created on Fri Jan 30 08:56:02 2015

@author: Gerardo Fratini
"""

import pathlib as pl
import pandas as pd
import fileinput as fi
import sys
import os
import time

#==============================================================================
#initializations
rootdir = pl.Path('C:\dev\eddypro')


fname1 = r'C:\dev\eddypro\prj\project_flist_rp.txt'
fname2 = r'C:\dev\eddypro\prj\flist.txt'

l1 = pd.read_csv(fname1, header=None)
l2 = pd.read_csv(fname2, header=None)
l1.sort(columns=0, inplace=True)
l2.sort(columns=0, inplace=True)    
l1.to_csv(r'C:\dev\eddypro\prj\proj_list.txt', index=False)
l2.to_csv(r'C:\dev\eddypro\prj\dir_list.txt', index=False)



#==============================================================================
#Inform of misplaced files (files in a src dir that belong to another one)
ids = ['common', 'rp', 'fcc']
mods = ['m_common_global_var', 'm_rp_global_var', 'm_fcc_global_var']

for ix, srcdir in enumerate(['src\src_common','src\src_rp','src\src_fcc']):
    print 'Scanning source directory: ' + srcdir
    for fpath in list(rootdir.joinpath(srcdir).glob('*.f90')):
        f = open(str(fpath), "r")
        for line in f:
            for m in mods:
                if m in line and ids[ix] not in m: 
                    print ' ' + fpath.name + ' uses ' + m
        f.close()
    print    
        
#==============================================================================
#Fix file headers
rootdir = pl.Path('C:/dev/eddypro')
for srcdir in ['src\src_common','src\src_rp','src\src_fcc']:
    print 'Fixing headers in source directory: ' + srcdir
    for fpath in list(rootdir.joinpath(srcdir).glob('*.f90')):
        fix_header(fpath)

#==============================================================================
#Fix makefile generated by Codeblocks for use on Mac/Linux
fpath = r'C:\dev\eddypro\prj\Makefile_rp'
makefile_for_linux(fpath, 'eddypro_rp')

fpath = r'C:\dev\eddypro\prj\Makefile_fcc'
makefile_for_linux(fpath, 'eddypro_fcc')


#==============================================================================
#Auxiliary functions
#==============================================================================
def fix_header(fpath):
    fix_filename(fpath)
    fix_underline(fpath)
    fix_copyright(fpath)

def fix_filename(fpath):
    sfpath = str(fpath)
    with open(sfpath) as f:
        #Skip first line    
        line = f.readline()
        #Check if file has its name correctly in the second line, otherwise fix
        if (sfpath in f.readline()):
            pass
        else:
            f.close()
            os.rename(sfpath, sfpath+"~")
            destination= open(sfpath, "w")
            source=open(sfpath+"~", "r")
            for ix, line in enumerate(source):
                if ix == 1:
                    destination.write( '! '+ fpath.name + "\n" )
                else:
                    destination.write(line)
            source.close()
            destination.close()
            os.remove(sfpath+'~')        

def fix_underline(fpath):
    sfpath = str(fpath)
    with open(sfpath) as f:
        #Skip first line    
        line = f.readline()
        #Get length of second line
        length = len(f.readline())
        #Check if third line has same length, otherwise fix
        if (len(f.readline()) == length):
            pass
        else:
            f.close()
            os.rename(sfpath, sfpath+"~")
            destination= open(sfpath, "w")
            source=open(sfpath+"~", "r")
            for ix, line in enumerate(source):
                if ix == 2:
                    destination.write( '! '+ '-'*len(fpath.name) + "\n" )
                else:
                    destination.write(line)
            source.close()
            destination.close()
            os.remove(sfpath+'~')        

def fix_copyright(fpath):
    sfpath = str(fpath)
    #Copyright line
    year = time.strftime('%Y') 
    crl = '! Copyright (C) 2011-' + year + ', LI-COR Biosciences\n'
    with open(sfpath) as f:
        #Define correct copyright line
        eco2s_cr_exist = False            
        year = time.strftime('%Y') 
        crl = '! Copyright (C) 2011-' + year + ', LI-COR Biosciences\n'

        #Skip first three lines
        for _ in range(3):
            line = f.readline()

        #On third of forth line the LI-COR copyright should be found 
        line = f.readline()
        if not 'LI-COR' in line:
            if 'Copyright' in line:
                eco2s_cr_exist = True
            else:
                eco2s_cr_exist = False            
            line = f.readline()
            
        if 'LI-COR' in line and crl != line:
            #Copyright line was not found, add it
            f.close()
            os.rename(sfpath, sfpath+"~")
            destination= open(sfpath, "w")
            source=open(sfpath+"~", "r")
            for ix, line in enumerate(source):
                if eco2s_cr_exist and ix == 4: 
                    destination.write(crl)
                elif not eco2s_cr_exist and ix == 3:
                    destination.write(crl)
                else:
                    destination.write(line)
            source.close()
            destination.close()
            os.remove(sfpath+'~')        
        elif 'LI-COR' not in line:
            #Copyright line was not found, add it
            f.close()
            os.rename(sfpath, sfpath+"~")
            destination= open(sfpath, "w")
            source=open(sfpath+"~", "r")
            for ix, line in enumerate(source):
                if eco2s_cr_exist and ix == 3: 
                    destination.write(line + crl)
                elif not eco2s_cr_exist and ix == 2:
                    destination.write(line + crl)
                else:
                    destination.write(line)
            source.close()
            destination.close()
            os.remove(sfpath+'~')        

#==============================================================================
#Hack makefile for use on Linux
def makefile_for_linux(fpath, app):
    fin=open(fpath, "r")
    fout = open(fpath+'_lin', "w")
    
    fout.write('#Makefile for EddyPro engine ' + app + '\n')
    fout.write('#Copyright (C) 2007-2011, Eco2s team, Gerardo Fratini' + '\n')
    fout.write('#Copyright (C) 2011-2015, LI-COR Biosciences' + '\n')
    fout.write('#This file is part of EddyPro (TM).' + '\n')
    fout.write('#This Makefile was automatically generated by Code::Blocks IDE under Windows' + '\n')
    fout.write('#and modified to compile under the following environments:' + '\n')
    fout.write('# - gfortran v4.7.1 under Mac OS' + '\n')
    fout.write('# - gfortran v4.8.3 under Linux (Fedora. 20)' + '\n')
    fout.write('#Further modifications may be needed to compile under different environments.' + '\n')
    
    for ix, line in enumerate(fin):
        if ix in range(3):
            pass        
        elif line.startswith('OBJS_DIR = '):
            fout.write('OBJS_DIR = ../obj/' + app + '/' + '\n')        
        elif line.startswith('EXE_DIR = '):
            fout.write('EXE_DIR = ../bin/' + '\n')        
        elif line.startswith('EXE = '):
            fout.write('EXE = ' + app + '\n')        
        elif line.startswith('FC = '):
            fout.write('FC = gfortran' + '\n')        
        elif line.startswith('CFLAGS = '):
            fout.write("CFLAGS = -pedantic -Wall -Wextra -Wcharacter-truncation "
                "-Wunderflow -Wno-compare-reals -fall-intrinsics -fbounds-check "
                "-std=f2003 -O3  -J$(OBJS_DIR) \n"
                "CFLAGS_FFT = -J$(OBJS_DIR) \n")
        elif '$(SRC_DIR_Fd3)$' in line:
            fout.write('	$(FC) $(CFLAGS_FFT) -c $(SRC_DIR_Fd3)$(@:.o=.F) -o $(OBJS_DIR)$@' + '\n')        

        elif line.startswith('IDIR = '):
            pass
        elif line.startswith('LFLAGS = '):
            pass
        elif line.startswith('LIBS = '):
            pass
            fout.write(line.replace('$(LIBS)',''))
        else:
            line = line.replace('$(LIBS)','')
            line = line.replace('$(LFLAGS)','')
            line = line.replace('$(IDIR)','')
            fout.write(line)
    
    fin.close()
    fout.close()
